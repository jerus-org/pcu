{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qdeps: update rust crate bsky-sdk to 0.1.20(pr #559)\ndeps: update rust crate clap to 4.5.40(pr #560)\ndeps: update rust crate clap-verbosity-flag to 3.0.3(pr #561)\ndeps: update rust crate color-eyre to 0.6.5(pr #562)\ndeps: update rust crate git2 to 0.20.2(pr #563)\ndeps: update rust crate gql_client to 1.0.8(pr #564)\ndeps: update rust crate owo-colors to 4.2.2(pr #565)\ndeps: update rust crate toml to 0.8.23(pr #566)\ndeps: update rust crate url to 2.5.4(pr #567)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qüë∑ ci(circleci)-simplify release workflow configuration(pr #554)\nüë∑ ci(circleci)-update circleci-toolkit orb version(pr #555)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qdeps: update rust crate bsky-sdk to 0.1.19(pr #550)\ndeps: update rust crate chrono to 0.4.41(pr #551)\ndeps: update rust crate toml to 0.8.22(pr #552)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qüêõ release: add semver requirement check(pr #545)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q‚ôªÔ∏è refactor(logging)-replace tracing with log(pr #542)\nüíÑ style(graphql)-fix indentation in get_tag query(pr #543)\\E$"}
{"rule":"RECOMMENDED_COMPOUNDS","sentence":"^\\Q‚ú® add fail_on_missing option to CmdPost(pr #530)\n‚ú® add bot user name for push_commit(pr #531)\n‚ú® add trace logging for credential usage(pr #532)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qdeps: update rust crate clap to 4.5.36(pr #526)\ndeps: update rust crate tokio to 1.44.2(pr #527)\ndeps: update dependency toolkit to v2.8.1(pr #528)\nüêõ git_ops: add logging for ssh key credential status(pr #533)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qdeps: update rust crate log to 0.4.27(pr #517)\ndeps: update rust crate bsky-sdk to 0.1.18(pr #518)\ndeps: update rust crate clap to 4.5.35(pr #519)\ndeps: update rust crate env_logger to 0.11.8(pr #520)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qdeps: update rust crate git2 to 0.20.1(pr #513)\ndeps: update rust crate tempfile to 3.19.1(pr #514)\ndeps: update rust crate named-colour to 0.3.19(pr #515)\\E$"}
{"rule":"EN_UNPAIRED_BRACKETS","sentence":"^\\Qchore-remove commented out debug logs and unused code(pr #302)\nremove-remove customised commit and push for changelogs(pr #303)\nci-integrate rebase command into change update job(pr #305)\nci-add check for pull request before running cl update(pr #312)\nci-modify conditional logic for result variable and API call(pr #313)\nrefactor(label)-update GetLabelID structure and related types(pr #316)\nfix(: skip deserializing owner and name fields in Repository struct(pr #322)\nrefactor(label_pr)-remove debug trace statement from GraphQLLabelPR implementation(pr #334)\nrefactor-rename 'rebase' command to 'label' in CI configuration and CLI(pr #343)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qadd condition to execute pcu rebase only if CIRCLE_PULL_REQUEST is set(pr #309)\nrename GetPullRequestTitle to GetLabelID and remove redundant log trace(pr #315)\ncomment out serde rename attribute for label field(pr #317)\nadd owner and name fields to repository query(pr #321)\nlabel_pr: simplify GraphQL mutation parameters for labeling PRs(pr #325)\nremove unused fields 'name' and 'color' from Label struct in label_pr.rs(pr #326)\ngraphql: correct trace log message from vars to mutation in label_pr.rs(pr #327)\nlabel_pr: replace ID with name in Label struct and GraphQL query(pr #328)\ngraphql: correct label_id type in mutation from String to ID(pr #329)\ncorrect typo in GraphQL mutation query in label_pr.rs(pr #330)\ncorrect typos in GraphQL mutation for adding labels to PR(pr #331)\ngraphql: correct typo in 'labelable' struct field name in label_pr.rs(pr #332)\ngraphql: rename GetPullRequestTitle struct to Data and enhance Data struct in label_pr.rs(pr #333)\ngit_ops: add early exit for no open PRs scenario following filter to login(pr #336)\nupdate test label in CircleCI config and add description parameter to GraphQL mutation(pr #341)\\E$"}
{"rule":"LOG_IN","sentence":"^\\Qadd condition to execute pcu rebase only if CIRCLE_PULL_REQUEST is set(pr #309)\nrename GetPullRequestTitle to GetLabelID and remove redundant log trace(pr #315)\ncomment out serde rename attribute for label field(pr #317)\nadd owner and name fields to repository query(pr #321)\nlabel_pr: simplify GraphQL mutation parameters for labeling PRs(pr #325)\nremove unused fields 'name' and 'color' from Label struct in label_pr.rs(pr #326)\ngraphql: correct trace log message from vars to mutation in label_pr.rs(pr #327)\nlabel_pr: replace ID with name in Label struct and GraphQL query(pr #328)\ngraphql: correct label_id type in mutation from String to ID(pr #329)\ncorrect typo in GraphQL mutation query in label_pr.rs(pr #330)\ncorrect typos in GraphQL mutation for adding labels to PR(pr #331)\ngraphql: correct typo in 'labelable' struct field name in label_pr.rs(pr #332)\ngraphql: rename GetPullRequestTitle struct to Data and enhance Data struct in label_pr.rs(pr #333)\ngit_ops: add early exit for no open PRs scenario following filter to login(pr #336)\nupdate test label in CircleCI config and add description parameter to GraphQL mutation(pr #341)\\E$"}
{"rule":"GITHUB","sentence":"^\\Qchore-add logging for pull request response(pr #290)\nrefactor-remove unused github_graphql variable and related code in pull_request.rs(pr #300)\\E$"}
{"rule":"GITHUB","sentence":"^\\Qadd push_commit method and refactor branch method to branch_or_main(pr #286)\nadd commit and reduce to push only(pr #288)\nadd semver option to Push struct and tag_opt method(pr #289)\nfallback to graphql client for fetching pull request title(pr #291)\nbetter organisation of code(pr #294)\nadd support for gql_client with headers in get_github_apis(pr #295)\nuse GraphQL for pull request title retrieval(pr #299)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qrefactor-replace octocrab with octocrate in various modules(pr #265)\nci-upgrade jerus-org/circleci-toolkit orb version from 0.25.0 to 1.0.0(pr #268)\nrefactor-remove settings field from Client struct, add git_api, default_branch, commit_message fields(pr #271)\nci-increase pcu_verbosity level from -vvv to -vvvv(pr #276)\nrefactor-change print_changelog function to return string instead of printing directly(pr #280)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qrefactor-replace octocrab with octocrate in various modules(pr #265)\nci-upgrade jerus-org/circleci-toolkit orb version from 0.25.0 to 1.0.0(pr #268)\nrefactor-remove settings field from Client struct, add git_api, default_branch, commit_message fields(pr #271)\nci-increase pcu_verbosity level from -vvv to -vvvv(pr #276)\nrefactor-change print_changelog function to return string instead of printing directly(pr #280)\\E$"}
{"rule":"GITHUB","sentence":"^\\Qrefactor-extract repeated code into commands set_semver, make_cargo_release, make_github_release(pr #229)\\E$"}
{"rule":"GITHUB","sentence":"^\\Qci-adopt updated toolkit and set install_from_github flag(pr #182)\nchore-update renovate configuration with new rules and settings(pr #184)\nci-update toolkit version and adopt choose_pipeline for bot commit check(pr #187)\nci-adopt end_success from toolkit(pr #188)\nchore-restore crates.io version of keep-a-changelog and update toolkit version(pr #195)\nchore-trace config settings(pr #198)\nchore-add trace log for pcu_pull_request variable(pr #199)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QReturn early if the changelog has been updated already(pr #93)\nlogger and logging (pr #102)\nsign the commit using gpg(pr #107)\nadd CLI flag to set verbosity of logs(pr #117)\nallow log environment variables to override command line(pr #118)\nadd Sign enum and sign field to Cli struct(pr #121)\nadd match for sign types in run_update function(pr #122)\nadd config crate to Cargo.toml and implement get_settings function in main.rs(pr #127)\nadd error handling for settings(pr #129)\nset defaults for settings(pr #131)\nadd support for using settings to configure client(pr #134)\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qci-tidy up and clarify removal of original ssh key(pr #92)\nchore-add debug print statement to repo_status method(pr #94)\nchore-remove redundant code in main(pr #96)\nci-reorder ssh and gpg and git steps(pr #97)\nchore-update branch message to remove personal pronoun(pr #98)\nrefactor-remove commented out code(pr #99)\nchore-return to using none in commit_signed(pr #100)\nrefactor-align var and restore simple commit without signing(pr #101)\nrefactor-remove redundant imports and functions(pr #103)\nchore-replace printlns with log macros(pr #104)\nrefactor-main update to use logs instead of println(pr #106)\nchore-move all but current println to logging(pr #108)\nchore-decorate signing with log messages(pr #109)\nchore-add logging for input before writing to stdin(pr #110)\ndocs-tidy up changelog(pr #111)\nchore-catch up the changelog(pr #112)\nchore-remove blank lines(pr #113)\nchore-remove blanks(pr #114)\nchore-display messages using logging(pr #115)\nrefactor-replace println with logging(pr #116)\nUpdate issue templates(pr #119)\nchore-add pull request template to .github directory(pr #120)\nchore-add log level check before updating changelog(pr #125)\nchore-add default values required by client module(pr #133)\nrefactor-migrate const to  settings(pr #135)\nci-customise release to make the first release v0.1.0(pr #137)\nchore-manual update of changelog waiting on fix to message(pr #139)\nchore-prepare for release by committing lock file (pr #140)\ndocs-update readme for first release(pr #141)\\E$"}
{"rule":"GITHUB","sentence":"^\\Qci-tidy up and clarify removal of original ssh key(pr #92)\nchore-add debug print statement to repo_status method(pr #94)\nchore-remove redundant code in main(pr #96)\nci-reorder ssh and gpg and git steps(pr #97)\nchore-update branch message to remove personal pronoun(pr #98)\nrefactor-remove commented out code(pr #99)\nchore-return to using none in commit_signed(pr #100)\nrefactor-align var and restore simple commit without signing(pr #101)\nrefactor-remove redundant imports and functions(pr #103)\nchore-replace printlns with log macros(pr #104)\nrefactor-main update to use logs instead of println(pr #106)\nchore-move all but current println to logging(pr #108)\nchore-decorate signing with log messages(pr #109)\nchore-add logging for input before writing to stdin(pr #110)\ndocs-tidy up changelog(pr #111)\nchore-catch up the changelog(pr #112)\nchore-remove blank lines(pr #113)\nchore-remove blanks(pr #114)\nchore-display messages using logging(pr #115)\nrefactor-replace println with logging(pr #116)\nUpdate issue templates(pr #119)\nchore-add pull request template to .github directory(pr #120)\nchore-add log level check before updating changelog(pr #125)\nchore-add default values required by client module(pr #133)\nrefactor-migrate const to  settings(pr #135)\nci-customise release to make the first release v0.1.0(pr #137)\nchore-manual update of changelog waiting on fix to message(pr #139)\nchore-prepare for release by committing lock file (pr #140)\ndocs-update readme for first release(pr #141)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qci-tidy up and clarify removal of original ssh key(pr #92)\nchore-add debug print statement to repo_status method(pr #94)\nchore-remove redundant code in main(pr #96)\nci-reorder ssh and gpg and git steps(pr #97)\nchore-update branch message to remove personal pronoun(pr #98)\nrefactor-remove commented out code(pr #99)\nchore-return to using none in commit_signed(pr #100)\nrefactor-align var and restore simple commit without signing(pr #101)\nrefactor-remove redundant imports and functions(pr #103)\nchore-replace printlns with log macros(pr #104)\nrefactor-main update to use logs instead of println(pr #106)\nchore-move all but current println to logging(pr #108)\nchore-decorate signing with log messages(pr #109)\nchore-add logging for input before writing to stdin(pr #110)\ndocs-tidy up changelog(pr #111)\nchore-catch up the changelog(pr #112)\nchore-remove blank lines(pr #113)\nchore-remove blanks(pr #114)\nchore-display messages using logging(pr #115)\nrefactor-replace println with logging(pr #116)\nUpdate issue templates(pr #119)\nchore-add pull request template to .github directory(pr #120)\nchore-add log level check before updating changelog(pr #125)\nchore-add default values required by client module(pr #133)\nrefactor-migrate const to settings(pr #135)\nci-customise release to make the first release v0.1.0(pr #137)\nchore-manual update of changelog waiting on fix to message(pr #139)\nchore-prepare for release by committing lock file (pr #140)\ndocs-update readme for first release(pr #141)\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qci-tidy up and clarify removal of original ssh key(pr #92)\nchore-add debug print statement to repo_status method(pr #94)\nchore-remove redundant code in main(pr #96)\nci-reorder ssh and gpg and git steps(pr #97)\nchore-update branch message to remove personal pronoun(pr #98)\nrefactor-remove commented out code(pr #99)\nchore-return to using none in commit_signed(pr #100)\nrefactor-align var and restore simple commit without signing(pr #101)\nrefactor-remove redundant imports and functions(pr #103)\nchore-replace printlns with log macros(pr #104)\nrefactor-main update to use logs instead of println(pr #106)\nchore-move all but current println to logging(pr #108)\nchore-decorate signing with log messages(pr #109)\nchore-add logging for input before writing to stdin(pr #110)\ndocs-tidy up changelog(pr #111)\nchore-catch up the changelog(pr #112)\nchore-remove blank lines(pr #113)\nchore-remove blanks(pr #114)\nchore-display messages using logging(pr #115)\nrefactor-replace println with logging(pr #116)\nUpdate issue templates(pr #119)\nchore-add pull request template to .github directory(pr #120)\nchore-add log level check before updating changelog(pr #125)\nchore-add default values required by client module(pr #133)\nrefactor-migrate const to settings(pr #135)\nci-customise release to make the first release v0.1.0(pr #137)\nchore-manual update of changelog waiting on fix to message(pr #139)\nchore-prepare for release by committing lock file (pr #140)\ndocs-update readme for first release(pr #141)\\E$"}
{"rule":"GITHUB","sentence":"^\\Qci-tidy up and clarify removal of original ssh key(pr #92)\nchore-add debug print statement to repo_status method(pr #94)\nchore-remove redundant code in main(pr #96)\nci-reorder ssh and gpg and git steps(pr #97)\nchore-update branch message to remove personal pronoun(pr #98)\nrefactor-remove commented out code(pr #99)\nchore-return to using none in commit_signed(pr #100)\nrefactor-align var and restore simple commit without signing(pr #101)\nrefactor-remove redundant imports and functions(pr #103)\nchore-replace printlns with log macros(pr #104)\nrefactor-main update to use logs instead of println(pr #106)\nchore-move all but current println to logging(pr #108)\nchore-decorate signing with log messages(pr #109)\nchore-add logging for input before writing to stdin(pr #110)\ndocs-tidy up changelog(pr #111)\nchore-catch up the changelog(pr #112)\nchore-remove blank lines(pr #113)\nchore-remove blanks(pr #114)\nchore-display messages using logging(pr #115)\nrefactor-replace println with logging(pr #116)\nUpdate issue templates(pr #119)\nchore-add pull request template to .github directory(pr #120)\nchore-add log level check before updating changelog(pr #125)\nchore-add default values required by client module(pr #133)\nrefactor-migrate const to settings(pr #135)\nci-customise release to make the first release v0.1.0(pr #137)\nchore-manual update of changelog waiting on fix to message(pr #139)\nchore-prepare for release by committing lock file (pr #140)\ndocs-update readme for first release(pr #141)\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qextra bluesky = \"Covering the key steps involved, from identification of updates through automated testing and release.\"\\E$"}
{"rule":"CONSECUTIVE_SPACES","sentence":"^\\Qflowchart LR C1@{ shape: sm-circ, label: \"Start\" } P10@{ shape: rect, label: \"Development\" } I10@{ shape: docs, label: \"Development PRs\" } P20@{ shape: rect, label: \"Dependency  Checks\" } I20@{ shape: docs, label: \"Dependency PRs\" } P30@{ shape: rect, label: \"CI Test & Review  \" } I30@{ shape: doc, label: \"Updated Repo\" } P40@{ shape: rect, label: \"Release\" } I40@{ shape: docs, label: \"Published Release\" } C2@{ shape: framed-circle, label: \"Stop\" } C1 --> P10 --> I10 --> P30 --> I30 --> P40 --> I40 --> C2 C1 --> P20 --> I20 --> P30 {% end %}\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qflowchart LR C1@{ shape: sm-circ, label: \"Start\" } P10@{ shape: rect, label: \"Development\" } I10@{ shape: docs, label: \"Development PRs\" } P20@{ shape: rect, label: \"Dependency  Checks\" } I20@{ shape: docs, label: \"Dependency PRs\" } P30@{ shape: rect, label: \"CI Test & Review  \" } I30@{ shape: doc, label: \"Updated Repo\" } P40@{ shape: rect, label: \"Release\" } I40@{ shape: docs, label: \"Published Release\" } C2@{ shape: framed-circle, label: \"Stop\" } C1 --> P10 --> I10 --> P30 --> I30 --> P40 --> I40 --> C2 C1 --> P20 --> I20 --> P30 {% end %}\\E$"}
{"rule":"SPACE_BETWEEN_NUMBER_AND_WORD","sentence":"^\\Qgantt title Update and Release Cycle dateFormat YYYY-MM-DD tickInterval 1day todayMarker off axisFormat %d section Dev Cycle starts :active,  milestone, m1, 2025-01-01, 2m Development         :active, dev, 2025-01-01, 5d section Dep Dependency Updates  :active, dep, 2025-01-05, 1d section Pub Release             :active, after dev and dep, 1d Risk                :                           1d Cycle Ends : active,  milestone, m2, 2025-01-08, 4m\\E$"}
{"rule":"CONSECUTIVE_SPACES","sentence":"^\\Qgantt title Update and Release Cycle dateFormat YYYY-MM-DD tickInterval 1day todayMarker off axisFormat %d section Dev Cycle starts :active,  milestone, m1, 2025-01-01, 2m Development         :active, dev, 2025-01-01, 5d section Dep Dependency Updates  :active, dep, 2025-01-05, 1d section Pub Release             :active, after dev and dep, 1d Risk                :                           1d Cycle Ends : active,  milestone, m2, 2025-01-08, 4m\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qgantt title Update and Release Cycle dateFormat YYYY-MM-DD tickInterval 1day todayMarker off axisFormat %d section Dev Cycle starts :active,  milestone, m1, 2025-01-01, 2m Development         :active, dev, 2025-01-01, 5d section Dep Dependency Updates  :active, dep, 2025-01-05, 1d section Pub Release             :active, after dev and dep, 1d Risk                :                           1d Cycle Ends : active,  milestone, m2, 2025-01-08, 4m\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qpcu\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfrom The Economist\nCommon Sense with Dan Carlin\nDrum Tower\nThe Ezra Klein Show\nFT News Briefing\nGoodFellows: Conversations from the Hoover Institution\nIn The News\nInside Politics with Hugh Linehan\nThe Intelligence from The Economist\nMoney Talks from The Economist\nMore or Less: Behind the Stats\nPolitical Fix\nPOLITICO's EU Confidential\nPower Play\nThe Rest Is Classified\nThe Rest Is Politics: US\nThe Rest Is Politics\nUK Politics Podcast\nThe World in Brief from The Economist\nYour Politics\\E$"}
{"rule":"EN_COMPOUNDS_POST_PROCESSING","sentence":"^\\Q‚ú® add initial Cargo.toml for gen-bsky crate(pr #634)\n‚ú® add front matter parsing functionality(pr #638)\n‚ú® add error variants and write bluesky record(pr #639)\n‚ú® add draft management for blog posts(pr #640)\n‚ú® add getter method for bluesky field(pr #643)\n‚ú® add draft allowance option to blog post processing(pr #648)\n‚ú® add link module for blog post draft(pr #652)\\E$"}
{"rule":"PHRASE_REPETITION","sentence":"^\\QConversations with Tyler\nThe Economist Asks\nFreakonomics Radio\nThe Freakonomics Radio Book Club\nFull Steam with Jess Kelly\nIn Our Time\nIntelligence Squared\nIntelligence Squared Business\nThe Jordan Harbinger Show\nPeople I (Mostly) Admire\nThe Rachman Review\nReal Humans\nShould This Exist?\\E$"}
{"rule":"SLOW_MO","sentence":"^\\QSlo Mo: A Podcast with Mo Gawdat\nSudhir Breaks the Internet\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QThe CloudBytes Podcast\nCYBER\nCyber Humanity\nThe Daily Swig\nDarknet Diaries\nDefensive Security Podcast - Malware, Hacking, Cyber Security & Infosec\nDown the Security Rabbithole Podcast\nHacked\nMalicious Life\nSmashing Security\nThe Social-Engineer Podcast\nSources and Sinks\nData Privacy Detective\nData Privacy Podcast\nThe Privacy Advisor Podcast\n99% Invisible\nFreakonomics, M.D.\nPandemic: Coronavirus Edition\nFutureproof with Jonathan McCrea\nThe Infinite Monkey Cage\nScience Vs\nScience Weekly\nAWS Morning Brief\nBabbage from The Economist\nThe Big Tech Show\nFT Tech Tonic\nMarketplace Tech\nTech Radio Podcast\nTech Talk with Jess Kelly\nTechnology on Pat Kenny\nGo and See\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QThe CloudBytes Podcast\nCYBER\nCyber Humanity\nThe Daily Swig\nDarknet Diaries\nDefensive Security Podcast - Malware, Hacking, Cybersecurity & Infosec\nDown the Security Rabbithole Podcast\nHacked\nMalicious Life\nSmashing Security\nThe Social-Engineer Podcast\nSources and Sinks\nData Privacy Detective\nData Privacy Podcast\nThe Privacy Advisor Podcast\n99% Invisible\nFreakonomics, M.D.\nPandemic: Coronavirus Edition\nFutureproof with Jonathan McCrea\nThe Infinite Monkey Cage\nScience Vs\nScience Weekly\nAWS Morning Brief\nBabbage from The Economist\nThe Big Tech Show\nFT Tech Tonic\nMarketplace Tech\nTech Radio Podcast\nTech Talk with Jess Kelly\nTechnology on Pat Kenny\nGo and See\\E$"}
{"rule":"PAST_TIME","sentence":"^\\QNow, I will no longer get that encouragement, so I guess its past time to get to doing.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qextra bluesky.description = \"Covering the key steps involved, from identification of updates through automated testing and release.\"\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qextra.series_intro_templates next_only = \"\"\" Welcome to \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniqu√≠-|Maniqu√≠es-)[0-9]+\\QSERIES_PAGES_OLIST\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qextra.series_intro_templates next_only = \"\"\" Welcome to \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniqu√≠-|Maniqu√≠es-)[0-9]+\\QSERIES_PAGES_OLIST\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\QNext: $NEXT_HTML_LINK - $NEXT_DESCRIPTION \"\"\"\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qmiddle = \"\"\" üìö Part $SERIES_PAGE_INDEX of $SERIES_PAGES_NUMBER in $SERIES_HTML_LINK\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\QPrevious: $PREV_HTML_LINK\nNext: $NEXT_HTML_LINK \"\"\"\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qprev_only = \"\"\" Welcome to the final part of $SERIES_HTML_LINK!\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qprev_only = \"\"\" Welcome to the final part of $SERIES_HTML_LINK!\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\QPrevious: $PREV_HTML_LINK \"\"\"\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qdefault = \"This article is part of the $SERIES_HTML_LINK series.\"\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qextra.series_outro_templates next_only = \"\"\" $SERIES_PAGES_OLIST\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qextra.series_outro_templates next_only = \"\"\" $SERIES_PAGES_OLIST\\E$"}
{"rule":"EN_UNPAIRED_BRACKETS","sentence":"^\\QContinue your journey with \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniqu√≠-|Maniqu√≠es-)[0-9]+\\QSERIES_TITLE]($SERIES_PERMALINK) series outline.\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Q\"\"\"\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qmiddle = \"\"\"\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\QPrevious: $PREV_HTML_LINK\nNext: $NEXT_HTML_LINK\nSeries Overview \"\"\"\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qprev_only = \"\"\" üéâ Congratulations!\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qprev_only = \"\"\" üéâ Congratulations!\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qdefault = \"\"\"\\E$"}
{"rule":"EN_UNPAIRED_QUOTES","sentence":"^\\Qdefault = \"\"\"\\E$"}
